version: '3.8'

services:

  django:
    build:
      context: ./django_module
      dockerfile: ./Dockerfile
    container_name: django
    command: >
      bash -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./django_module:/django_module
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  celery:
    build:
      context: ./django_module
      dockerfile: ./Dockerfile
    container_name: celery
    command: >
      bash -c "
        celery -A config worker -l INFO"
    depends_on:
      - django

  celery_beat:
    build:
      context: ./django_module
      dockerfile: ./Dockerfile
    container_name: celery_beat
    command: >
      bash -c "
        celery -A config beat -l INFO"
    depends_on:
      - django

  postgres:
    image: postgres:alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=django_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - celery

  tg_watcher:
    build:
      context: ./tg_new_user_watcher
      dockerfile: ./Dockerfile
    container_name: tg_watcher
    command: >
      bash -c "python telegram_bot.py"
    depends_on:
      - postgres

volumes:
  postgres_data:
